// <auto-generated />
using System;
using FitForge.Data.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitForge.Data.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20241125075553_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitForge.Data.Models.Cajas", b =>
                {
                    b.Property<int>("CajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CajaId"));

                    b.Property<double>("BalanceBanco")
                        .HasColumnType("float");

                    b.Property<double>("BalanceEfectivo")
                        .HasColumnType("float");

                    b.HasKey("CajaId");

                    b.ToTable("Cajas");
                });

            modelBuilder.Entity("FitForge.Data.Models.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<long>("Cedula")
                        .HasColumnType("bigint");

                    b.Property<int>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("FotoPerfilUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Membresia")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PagoEfectivoId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pin")
                        .HasColumnType("int");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<int?>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("ClienteId");

                    b.HasIndex("DomicilioId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("FitForge.Data.Models.Domicilios", b =>
                {
                    b.Property<int>("DomicilioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DomicilioId"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumCalle")
                        .HasColumnType("int");

                    b.Property<int>("NumCasa")
                        .HasColumnType("int");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DomicilioId");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("FitForge.Data.Models.Empleados", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nombres")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pin")
                        .HasColumnType("int");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<double>("Sueldo")
                        .HasColumnType("float");

                    b.HasKey("EmpleadoId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("FitForge.Data.Models.Gerentes", b =>
                {
                    b.Property<int>("GerenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GerenteId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasKey("GerenteId");

                    b.ToTable("Gerentes");
                });

            modelBuilder.Entity("FitForge.Data.Models.PagosEfectivo", b =>
                {
                    b.Property<int>("PagoEfectivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoEfectivoId"));

                    b.Property<int>("CajasId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("PagoEfectivoId");

                    b.HasIndex("CajasId");

                    b.HasIndex("ClienteId");

                    b.ToTable("PagosEfectivo");
                });

            modelBuilder.Entity("FitForge.Data.Models.PagosTarjeta", b =>
                {
                    b.Property<int>("PagoTarjetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoTarjetaId"));

                    b.Property<int>("CajaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<int>("TarjetaId")
                        .HasColumnType("int");

                    b.HasKey("PagoTarjetaId");

                    b.HasIndex("CajaId");

                    b.HasIndex("TarjetaId");

                    b.ToTable("PagosTarjeta");
                });

            modelBuilder.Entity("FitForge.Data.Models.Tarjetas", b =>
                {
                    b.Property<int>("TarjetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TarjetaId"));

                    b.Property<int?>("ClientesClienteId")
                        .HasColumnType("int");

                    b.Property<int>("Cvv")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaVencimiento")
                        .HasColumnType("date");

                    b.Property<int>("NumeroTarjeta")
                        .HasColumnType("int");

                    b.HasKey("TarjetaId");

                    b.HasIndex("ClientesClienteId");

                    b.ToTable("Tarjetas");
                });

            modelBuilder.Entity("FitForge.Data.Models.Clientes", b =>
                {
                    b.HasOne("FitForge.Data.Models.Domicilios", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domicilio");
                });

            modelBuilder.Entity("FitForge.Data.Models.PagosEfectivo", b =>
                {
                    b.HasOne("FitForge.Data.Models.Cajas", "Caja")
                        .WithMany("PagosEfectivo")
                        .HasForeignKey("CajasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitForge.Data.Models.Clientes", "Cliente")
                        .WithMany("PagoEfectivo")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caja");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FitForge.Data.Models.PagosTarjeta", b =>
                {
                    b.HasOne("FitForge.Data.Models.Cajas", "Caja")
                        .WithMany("PagoTarjeta")
                        .HasForeignKey("CajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitForge.Data.Models.Tarjetas", "Tarjetas")
                        .WithMany("PagoTarjeta")
                        .HasForeignKey("TarjetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caja");

                    b.Navigation("Tarjetas");
                });

            modelBuilder.Entity("FitForge.Data.Models.Tarjetas", b =>
                {
                    b.HasOne("FitForge.Data.Models.Clientes", null)
                        .WithMany("Tarjeta")
                        .HasForeignKey("ClientesClienteId");
                });

            modelBuilder.Entity("FitForge.Data.Models.Cajas", b =>
                {
                    b.Navigation("PagoTarjeta");

                    b.Navigation("PagosEfectivo");
                });

            modelBuilder.Entity("FitForge.Data.Models.Clientes", b =>
                {
                    b.Navigation("PagoEfectivo");

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("FitForge.Data.Models.Tarjetas", b =>
                {
                    b.Navigation("PagoTarjeta");
                });
#pragma warning restore 612, 618
        }
    }
}

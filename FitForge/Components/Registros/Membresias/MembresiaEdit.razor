@page "/Membresias/Edit/{MembresiaId:int}"
@inject IMembresiasService MembresiasService
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer

<div class="wrapper">
    <div class="form-section">
        <EditForm Model="membresiaDto" OnValidSubmit="Modificar" FormName="frmMembresiaedit">
            <DataAnnotationsValidator />

            <!-- Título y descripción -->
            <div class="text-black text-center mb-4">
                <h3><strong>Editar Membresía</strong></h3>
                <p>Modifique los datos de la membresía seleccionada</p>
            </div>

            <!-- Estado de la membresía -->
            <div class="input-box">
                <InputSelect id="EstadoMembresia"
                             @bind-Value="@membresiaDto.EstadoMembresiaId" required>
                    <option value="" disabled>Seleccione un estado</option>
                    <option value="1">Activa</option>
                    <option value="2">Suspendida</option>
                    <option value="3">Vencido</option>
                </InputSelect>
                <ValidationMessage For="@(() => membresiaDto.EstadoMembresiaId)" />
            </div>

            <!-- Descripción -->
            <div class="form-floating mb-3">
                <InputText id="Descripcion"
                           class="form-control"
                           @bind-Value="@membresiaDto.Descripcion"
                           required />
                <label for="Descripcion">Ingrese una descripción</label>
                <ValidationMessage For="@(() => membresiaDto.Descripcion)" />
            </div>

            <!-- Precio -->
            <div class="form-floating mb-3">
                <InputNumber id="Precio"
                             class="form-control"
                             @bind-Value="@membresiaDto.Precio"
                             required />
                <label for="Precio">Ingrese el precio</label>
                <ValidationMessage For="@(() => membresiaDto.Precio)" />
            </div>

            <!-- Fecha de vencimiento -->
            <div class="form-floating mb-3">
                <InputDate id="FechaVencimiento"
                           class="form-control"
                           @bind-Value="@membresiaDto.FechaVencimiento"
                           required />
                <label for="FechaVencimiento">Seleccione la fecha de vencimiento</label>
                <ValidationMessage For="@(() => membresiaDto.FechaVencimiento)" />
            </div>

            <!-- Botón para guardar cambios -->
            <div class="text-center">
                <button type="submit" class="btn btn-primary" style="background-color: #96305a; color: #fff;">
                    Guardar Cambios de la Membresía
                </button>
            </div>

            <!-- Mensaje de éxito o error -->
            @if (!string.IsNullOrEmpty(mensajeExito))
            {
                <div class="alert alert-info mt-2">
                    @mensajeExito
                </div>
            }
        </EditForm>
    </div>

    <div class="welcome-section">
        <img src="/images/fitforge-logo.png" alt="FitForge Logo" width="200">
        <br />
        <a href="/Membresias/Index" class="btn btn-primary" style="background-color: #96305a; color: #fff;">
            Volver
        </a>
    </div>
</div>

<head>
    <link href="css/Login.css" rel="stylesheet" />
</head>

@code {
    [Parameter]
    public int? MembresiaId { get; set; }

    private MembresiasDto membresiaDto { get; set; } = new MembresiasDto();
    private string mensajeExito;
    private bool Existe { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        if (MembresiaId.HasValue)
        {
            membresiaDto.MembresiaId = MembresiaId.Value;
            await Buscar();
        }
    }

    public void Nuevo()
    {
        membresiaDto = new MembresiasDto();
        Existe = false;
    }

    public async Task Buscar()
    {
        var MembresiaEncontrada = await MembresiasService.Buscar(membresiaDto.MembresiaId);

        if (MembresiaEncontrada != null)
        {
            membresiaDto = MembresiaEncontrada;
        }
    }

    private async Task Modificar()
    {
        try
        {
            var guardado = await MembresiasService.Guardar(membresiaDto);

            if (guardado)
            {
                mensajeExito = "Membresía editada con éxito!";
                Nuevo();
            }
            else
            {
                mensajeExito = "Error al editar la membresía.";
            }
        }
        catch (Exception ex)
        {
            mensajeExito = $"Error: {ex.Message}";
        }
    }
}

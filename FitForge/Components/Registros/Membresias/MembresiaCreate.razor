@page "/Membresias/Create"
@inject IMembresiasService MembresiasService
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer

<Toasts class="p-3" Messages="Notificacion" AutoHide="true" Delay="6000" Placement="ToastsPlacement.TopRight" />

<div class="wrapper">
    <div class="form-section">
        <EditForm Model="nuevaMembresiaDto" OnValidSubmit="Crear" FormName="frmMembresiaCreate">
            <DataAnnotationsValidator />

            <!-- Título y descripción -->
            <div class="text-black text-center mb-4">
                <h3><strong>Crear Membresía</strong></h3>
                <p>Complete los datos para registrar una nueva membresía</p>
            </div>

            <!-- Estado de la membresía -->
            <div class="input-box">
                <InputSelect id="EstadoMembresia"
                             @bind-Value="@nuevaMembresiaDto.EstadoMembresiaId" required>
                    <option value="" disabled selected>Seleccione un estado</option>
                    <option value="1">Activa</option>
                    <option value="2">Suspendida</option>
                    <option value="3">Vencido</option>
                </InputSelect>
                <ValidationMessage For="@(() => nuevaMembresiaDto.EstadoMembresiaId)" />
            </div>


            <!-- Descripción -->
            <div class="form-floating mb-3">
                <InputText id="Descripcion"
                           class="form-control"
                           @bind-Value="@nuevaMembresiaDto.Descripcion"
                           required />
                <label for="Descripcion">Ingrese una descripción</label>
                <ValidationMessage For="@(() => nuevaMembresiaDto.Descripcion)" />
            </div>

            <!-- Precio -->
            <div class="form-floating mb-3">
                <InputNumber id="Precio"
                             class="form-control"
                             @bind-Value="@nuevaMembresiaDto.Precio"
                             required />
                <label for="Precio">Ingrese el precio</label>
                <ValidationMessage For="@(() => nuevaMembresiaDto.Precio)" />
            </div>

            <!-- Fecha de vencimiento -->
            <div class="form-floating mb-3">
                <InputDate id="FechaVencimiento"
                           class="form-control"
                           @bind-Value="@nuevaMembresiaDto.FechaVencimiento"
                           required />
                <label for="FechaVencimiento">Seleccione la fecha de vencimiento</label>
                <ValidationMessage For="@(() => nuevaMembresiaDto.FechaVencimiento)" />
            </div>

            <!-- Botón para guardar -->
            <div class="text-center">
                <button type="submit" class="btn btn-primary" style="background-color: #96305a; color: #fff;">
                    Crear Membresía
                </button>
            </div>

            <!-- Mensaje de éxito o error -->
            @if (!string.IsNullOrEmpty(mensajeExito))
            {
                <div class="alert alert-info mt-2">
                    @mensajeExito
                </div>
            }
        </EditForm>
    </div>

    <div class="welcome-section">
        <img src="/images/fitforge-logo.png" alt="FitForge Logo" width="200">
        <br />
        <a href="/Membresias/Index" class="btn btn-primary" style="background-color: #96305a; color: #fff;">
            Volver
        </a>
    </div>
</div>

<head>
    <link href="css/Login.css" rel="stylesheet" />
</head>

@code {
    private MembresiasDto nuevaMembresiaDto { get; set; } = new MembresiasDto
        {
            EstadoMembresiaId = 1,
            FechaVencimiento = DateTime.Now.AddMonths(1) // Fecha predeterminada
        };
    private string mensajeExito;

    public List<ToastMessage> Notificacion = new List<ToastMessage>();
    public ToastType TipoNotificacion { get; set; }
    public string MensajeNotificacion { get; set; } = string.Empty;
    public string TituloNotificacion { get; set; } = string.Empty;

    private async Task Crear()
    {
        try
        {
            var creado = await MembresiasService.Guardar(nuevaMembresiaDto);

            if (creado)
            {
                TipoNotificacion = ToastType.Success;
                TituloNotificacion = "Enhorabuena";
                MensajeNotificacion = "¡La membresía fue creada exitosamente!";
                ShowMessage(TipoNotificacion, TituloNotificacion, MensajeNotificacion);
                nuevaMembresiaDto = new MembresiasDto
                    {
                        FechaVencimiento = DateTime.Now.AddMonths(1)
                    }; // Reiniciar el formulario
            }
            else
            {
                TipoNotificacion = ToastType.Danger;
                TituloNotificacion = "Error";
                MensajeNotificacion = "No se pudo crear la membresía.";
                ShowMessage(TipoNotificacion, TituloNotificacion, MensajeNotificacion);
            }
        }
        catch (Exception ex)
        {
            TipoNotificacion = ToastType.Danger;
            TituloNotificacion = "Error";
            MensajeNotificacion = "Ocurrió un error inesperado al crear la membresía.";
            ShowMessage(TipoNotificacion, TituloNotificacion, MensajeNotificacion);
        }
    }

    public void ShowMessage(ToastType toastType, string titulo, string cuerpo) => Notificacion.Add(CreateToastMessage(toastType, titulo, cuerpo));
    private ToastMessage CreateToastMessage(ToastType toastType, string titulo, string cuerpo)
    => new ToastMessage
        {
            Type = toastType,
            Title = $"{titulo}",
            HelpText = $"{DateTime.Now}",
            Message = $"{cuerpo}",
        };
}
@page "/Membresias/Index"
@inject IMembresiasService MembresiasService
@inject IEstadoMembresiasService EstadoMembresiasService
@rendermode InteractiveServer

<PageTitle>Membresías</PageTitle>
<body style="background-color: #F5E1CE">
	<div class="container">
		<div class="card shadow-lg">
			@*HEADER*@
			<div class="card-header text-center" style="background-color: #CA678E">
				<h3><b>Membresías</b></h3>
			</div>

			@*BODY*@
			<div class="card-body" style="background-color: #F5E1E8">
				<div class="row">
					@*Botón Crear*@
					<div class="col-12 text-start mb-3">
						<a href="/Membresias/Create" class="btn custom-button bi bi-plus-circle"> Crear Membresía</a>
					</div>
				</div>
				<table class="table table-sm table-striped table-hover">
					<thead>
						<tr>
							<th><b>Estado</b></th>
							<th><b>Descripción</b></th>
							<th><b>Precio</b></th>
							<th><b>Fecha de Vencimiento</b></th>
							<th><b>Acciones</b></th>
						</tr>
					</thead>
					<tbody class="table-group-divider">
						@foreach (var membresia in ListaMembresias)
						{
							<tr>
								<td>@membresia.EstadoMembresia?.Descripcion</td>
								<td>@membresia.Descripcion</td>
								<td>@($"${membresia.Precio:N2}")</td>
								<td>@membresia.FechaVencimiento.ToShortDateString()</td>
								<td>
									<div class="d-flex justify-content-between">
										<a href="/Membresias/Edit/@membresia.MembresiaId" class="btn btn-sm bi bi-pencil-square custom-button"> Editar</a>
										<button class="btn btn-sm custom-button bi bi-trash" @onclick="() => MostrarModal(membresia.MembresiaId)"> Eliminar</button>
									</div>
								</td>
							</tr>
						}
					</tbody>
					<caption>
						Membresías: @ListaMembresias.Count
					</caption>
				</table>
			</div>
		</div>
	</div>

	@if (mostrarModal)
	{
		<div class="modal fade show" tabindex="-1" style="display: block;" aria-modal="true" role="dialog">
			<div class="modal-dialog modal-dialog-centered">
				<div class="modal-content">
					<div class="modal-header" style="background-color: #CA678E; color: white;">
						<h5 class="modal-title">Confirmación</h5>
						<button type="button" class="btn-close" @onclick="CerrarModal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<p>¿Está seguro de que desea eliminar esta membresía?</p>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" @onclick="CerrarModal">Cancelar</button>
						<button type="button" class="btn btn-danger" @onclick="EliminarMembresia">Aceptar</button>
					</div>
				</div>
			</div>
		</div>
		<div class="modal-backdrop fade show" @onclick="CerrarModal"></div>
	}
</body>

@*Estilos personalizados*@
<style>
	.custom-button {
		background-color: #96305a;
		color: white;
	}

		.custom-button:hover {
			background-color: #ca678e;
			color: white;
		}

	/* Opciones de tabla */
	.table-striped > tbody > tr:nth-of-type(odd) {
		background-color: #F5E1E8;
	}

	.table-hover tbody tr:hover {
		background-color: #CA678E !important;
		color: white;
	}
</style>

@code {
	public List<MembresiasDto> ListaMembresias = new List<MembresiasDto>();
	public List<EstadosMembresiaDto> ListaEstadosMembresias = new List<EstadosMembresiaDto>();
	private bool mostrarModal = false;
	private int membresiaIdSeleccionada;

	protected override async Task OnInitializedAsync()
	{
		ListaEstadosMembresias = await EstadoMembresiasService.ObtenerEstadoMembresias();
		ListaMembresias = await MembresiasService.Listar(c => true);
	}

	private void MostrarModal(int membresiaId)
	{
		membresiaIdSeleccionada = membresiaId;
		mostrarModal = true;
	}

	private void CerrarModal()
	{
		mostrarModal = false;
		membresiaIdSeleccionada = 0;
	}

	private async Task EliminarMembresia()
	{
		try
		{
			await MembresiasService.Eliminar(membresiaIdSeleccionada);
			ListaMembresias = await MembresiasService.Listar(c => true);
			mostrarModal = false;
			membresiaIdSeleccionada = 0;
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error al eliminar: {ex.Message}");
		}
	}
}
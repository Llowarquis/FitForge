@page "/Tarjetas/Create/{ClienteId:int}"
@inject ITarjetasService TarjetasService
@inject IClientesService ClientesService

<div class="wrapper">
    <div class="form-section">
        <EditForm Model="tarjetaDto" OnValidSubmit="Guardar" FormName="frmTarjeta">
            <DataAnnotationsValidator />

            <div class="text-black text-center">
                <h3><strong>Registro Tarjeta</strong></h3>
                <p>Ingrese los datos de la nueva tarjeta</p>
            </div>

            <!-- Nombre del cliente (readonly) -->
            <div class="mb-3">
                <label for="ClienteNombre" class="form-label">Cliente: @ClienteNombre</label>
            </div>

            <!-- Número de tarjeta -->
            <div class="form-floating mb-3">
                <InputText id="NumeroTarjeta" class="form-control" @bind-Value="@tarjetaDto.NumeroTarjeta" required placeholder="0000 0000 0000 0000" maxlength="19" />
                <label for="NumeroTarjeta">Ingrese el número de la tarjeta</label>
                <ValidationMessage For="@(() => tarjetaDto.NumeroTarjeta)" />
            </div>


            <!-- CVV -->
            <div class="form-floating mb-3">
                <InputNumber id="Cvv" class="form-control" @bind-Value="@tarjetaDto.Cvv" required min="100" max="9999" />
                <label for="Cvv">Ingrese el código de seguridad (CVV)</label>
                <ValidationMessage For="@(() => tarjetaDto.Cvv)" />
            </div>

            <!-- Fecha de vencimiento -->
            <div class="form-floating mb-3">
                <InputDate id="FechaVencimiento" class="form-control" @bind-Value="@tarjetaDto.FechaVencimiento" required />
                <label for="FechaVencimiento">Seleccione la fecha de vencimiento</label>
                <ValidationMessage For="@(() => tarjetaDto.FechaVencimiento)" />
            </div>

            <!-- Botón para registrar tarjeta -->
            <button type="submit" class="btn" style="background-color: #96305a; color: #fff;">
                Registrar Tarjeta
            </button>

            <!-- Mensaje de éxito o error -->
            @if (!string.IsNullOrEmpty(mensajeExito))
            {
                <div class="alert alert-info mt-2">
                    @mensajeExito
                </div>
            }
        </EditForm>
    </div>

    <div class="welcome-section">
        <img src="/images/fitforge-logo.png" alt="FitForge Logo" width="200">
        <br />
        <a href="/Tarjetas/Index/@ClienteId" class="btn btn-primary" style="background-color: #96305a; color: #fff;">
            Volver
        </a>
    </div>
</div>

<head>
    <link href="css/Login.css" rel="stylesheet" />
</head>

@code {
    [Parameter]
    public int ClienteId { get; set; }

    [SupplyParameterFromForm]
    private TarjetasDto tarjetaDto { get; set; } = new TarjetasDto();
    private string ClienteNombre { get; set; } = string.Empty;
    private string mensajeExito;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Llama a la función para obtener el cliente por ID
            var cliente = await ClientesService.ObtenerClientePorId(ClienteId);
            if (cliente != null)
            {
                ClienteNombre = cliente.Nombres;
                tarjetaDto.ClienteId = ClienteId;
            }
            else
            {
                ClienteNombre = "Cliente no encontrado";
            }
        }
        catch (Exception ex)
        {
            ClienteNombre = $"Error al cargar cliente: {ex.Message}";
        }
    }

    private async Task Guardar()
    {
        try
        {
            // Intentar guardar el registro
            var guardado = await TarjetasService.Guardar(tarjetaDto);

            if (guardado)
            {
                mensajeExito = "Tarjeta registrada con éxito!";
                tarjetaDto = new TarjetasDto { ClienteId = ClienteId };
            }
            else
            {
                mensajeExito = "Error al guardar la tarjeta.";
            }
        }
        catch (Exception ex)
        {
            mensajeExito = $"Error: {ex.Message}";
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}
@page "/Account/Login"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Iniciar Sesi&oacute;n</PageTitle>
<div class="wrapper">

	@*Formulario*@
	<div class="form-section">
		<EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
			<DataAnnotationsValidator />
			@*Titulo*@
			<div class="text-black text-center">
				<h3 style="margin-bottom: 1px;"><strong>Iniciar Sesi&oacute;n</strong></h3>
				<p>Inicie en FitForge.</p>
			</div>

			@*Campo email*@
			<div class="form-floating mb-3">
				<InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
				<label for="email" class="form-label">Email</label>
				<ValidationMessage For="() => Input.Email" class="text-danger validation-message" />
			</div>

			@*Campo contraseña*@
			<div class="form-floating mb-3">
				<InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
				<label for="password" class="form-label">Password</label>
				<ValidationMessage For="() => Input.Password" class="text-danger validation-message" />
			</div>

			@*Checkbox Recuerdame*@
			<div class="checkbox mb-3">
				<label class="switch-link">
					<InputCheckbox @bind-Value="Input.Recuerdame" class="darker-border-checkbox form-check-input" />
					Recuerdame
				</label>
			</div>

			@*Btn Iniciar sesion*@
			<div>
				<button type="submit" class="w-100 btn btn-lg btn-primary">Iniciar Sesi&oacute;n</button>
			</div>
		</EditForm>


		<div class="switch-link">

			@*Link olvidaste tu clave*@
			<p>
				<a href="Account/ForgotPassword">¿Olvidaste tu contraseña?</a>
			</p>

			@*Link Registrarse*@
			<p>
				¿No tienes una cuenta? <a href="@(NavigationManager.GetUriWithQueryParameters("Account/Register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))">Crea una</a>
			</p>
		</div>
	</div>

	@*Logo y Titulo de bienvenida*@
	<div class="welcome-section">
		<img src="images/fitforge-logo.png" alt="FirForge" width="200">
		<br />
		<h1><strong>¡BIENVENIDO/A DE NUEVO!</strong></h1>
		<p>¡Hola, Ingresa tus datos para continuar tu camino hacia tu figura ideal!</p>
		@if (!string.IsNullOrEmpty(errorMessage))
		{
			<p>@errorMessage</p>
		}
	</div>
</div>

<head>
	<link href="css/Login.css" rel="stylesheet" />
</head>

@code {
	// AQUI SE DEBE UTILIZAR UNA NOTIFICACICON
	private string errorMessage = string.Empty;

	[CascadingParameter]
	private HttpContext HttpContext { get; set; } = default!;

	[SupplyParameterFromForm]
	private InputModel Input { get; set; } = new();

	[SupplyParameterFromQuery]
	private string? ReturnUrl { get; set; }

	protected override async Task OnInitializedAsync()
	{
		if (HttpMethods.IsGet(HttpContext.Request.Method))
		{
			// Clear the existing external cookie to ensure a clean login process
			await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
		}
	}

	public async Task LoginUser()
	{
		// This doesn't count login failures towards account lockout
		// To enable password failures to trigger account lockout, set lockoutOnFailure: true
		var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.Recuerdame, lockoutOnFailure: false);
		if (result.Succeeded)
		{
			Logger.LogInformation("Has iniciado sesión.");
			RedirectManager.RedirectTo(ReturnUrl);
		}
		else if (result.RequiresTwoFactor)
		{
			RedirectManager.RedirectTo(
				"Account/LoginWith2fa",
				new() { ["returnUrl"] = ReturnUrl, ["rememberMe"] = Input.Recuerdame });
		}
		else if (result.IsLockedOut)
		{
			Logger.LogWarning("User account locked out.");
			RedirectManager.RedirectTo("Account/Lockout");
		}
		else
		{
			errorMessage = "Error: Email o Contraseña incorrectos.";
		}
	}

	private sealed class InputModel
	{
		[Required(ErrorMessage = "Este campo es obligatorio")]
		[EmailAddress(ErrorMessage = "Debe introducir un email valido")]
		public string Email { get; set; } = "";

		[Required(ErrorMessage = "Este campo es obligatorio")]
		[DataType(DataType.Password)]
		public string Password { get; set; } = "";

		[Display(Name = "Me recuerdas?")]
		public bool Recuerdame { get; set; }
	}
}
